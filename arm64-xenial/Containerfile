#FROM localhost/crosstool AS ctngbuild

FROM localhost/base-xenial AS main

LABEL description="Image to compile retroarch and libretro cores"
ENV TZ="America/Sao_Paulo"
ARG uid
ARG NUMPROC=2
ARG branch="master"
ARG branch=$branch

RUN /bin/sh -c set -eux \
  && echo "###### Ubuntu Main Repos" > /etc/apt/sources.list \
  && echo "deb http://de.archive.ubuntu.com/ubuntu/ xenial main restricted universe multiverse" >> /etc/apt/sources.list \
  && echo "deb-src http://de.archive.ubuntu.com/ubuntu/ xenial main restricted universe multiverse" >> /etc/apt/sources.list \
  && echo "###### Ubuntu Update Repos" >> /etc/apt/sources.list \
  && echo "deb http://de.archive.ubuntu.com/ubuntu/ xenial-security main restricted universe multiverse " >> /etc/apt/sources.list \
  && echo "deb http://de.archive.ubuntu.com/ubuntu/ xenial-updates main restricted universe multiverse " >> /etc/apt/sources.list \
  && echo "deb http://de.archive.ubuntu.com/ubuntu/ xenial-proposed main restricted universe multiverse " >> /etc/apt/sources.list \
  && echo "deb http://de.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse " >> /etc/apt/sources.list \
  && echo "deb-src http://de.archive.ubuntu.com/ubuntu/ xenial-security main restricted universe multiverse " >> /etc/apt/sources.list \
  && echo "deb-src http://de.archive.ubuntu.com/ubuntu/ xenial-updates main restricted universe multiverse " >> /etc/apt/sources.list \
  && echo "deb-src http://de.archive.ubuntu.com/ubuntu/ xenial-proposed main restricted universe multiverse " >> /etc/apt/sources.list \
  && echo "deb-src http://de.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse " >> /etc/apt/sources.list \
  && apt-get update \
  && apt-get install -y colord || dpkg --configure -a \
  && apt-get install -y \
      alsa-utils \
      autoconf \
      automake \
      autopoint \
      bash \
      bc \
      bison \
      bsdmainutils \
      build-essential \
      bzip2 \
      ca-certificates \
      ccache \
      chrpath \
      curl \
      debhelper \
      diffutils \
      doxygen \
      flex \
      fuse \
      g++ \
      g++-multilib \
      gawk \
      gcc \
      gettext \
      git \
      gnupg \
      gnupg2 \
      gperf \
      gzip \
      intltool \
      less \
      libaio-dev \
      libasound2-dev \
      libass-dev \
      libavdevice-dev \
      libbz2-dev \
      libc6-dev-i386 \
      libcaca-dev \
      libdrm-dev \
      libffi-dev \
      libflac-dev \
      libfreetype6-dev \
      libfribidi-dev \
      libgbm-dev \
      libgdbm-dev \
      libgdk-pixbuf2.0-dev \
      libglib2.0-dev \
      libglm-dev \
      libglu1-mesa-dev \
      libgtk-3-dev \
      libgtk2.0-dev \
      libjack-jackd2-dev \
      libjson-perl \
      libltdl-dev \
      liblua5.3-dev \
      liblzma-dev \
      libmbedtls-dev \
      libminiupnpc-dev \
      libmpv-dev \
      libncurses5-dev \
      libopenal-dev \
      libosmesa6-dev \
      libpcap-dev \
      libreadline-dev \
      libroar-dev \
      libsdl2-dev \
      libsixel-dev \
      libslang2-dev \
      libssl-dev \
      libsystemd-dev \
      libtool \
      libtool-bin \
      libusb-1.0-0-dev \
      libv4l-dev \
      libvulkan-dev \
      libwayland-dev \
      libwxgtk3.0-dev \
      libx11-dev \
      libx11-xcb-dev \
      libxcb-shm0-dev \
      libxkbcommon-dev \
      libxml-parser-perl \
      libxml2-dev \
      lsb-release \
      lzip \
      lzop \
      make \
      mesa-common-dev \
      meson \
      nasm \
      nsis \
      p7zip-full \
      patch \
      patchutils \
      perl \
      pkg-config \
      python3-all-dev \
      qtbase5-dev \
      ruby \
      sed \
      software-properties-common \
      sudo \
      sunxi-tools \
      swig \
      tar \
      texinfo \
      u-boot-tools \
      unzip \
      uuid-dev \
      wayland-protocols \
      wget \
      x11proto-xext-dev \
      xfonts-utils \
      xsltproc \
      xz-utils \
      yasm \
      zlib1g-dev \
    && rm -rf /var/lib/apt/lists/* 
RUN /bin/sh -c set -eux \
  && useradd -d /developer -m developer \
  && chown -R developer:developer /developer \
  && wget --no-check-certificate -qO- "https://cmake.org/files/v3.30/cmake-3.30.0-linux-x86_64.tar.gz" | tar xz --strip-components=1 -C /usr/local \
  && apt-get dist-upgrade -y \
  && add-apt-repository -y --update ppa:ubuntu-toolchain-r/test \
#  && wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null \
#  && echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ xenial main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null \
#  && test -f /usr/share/doc/kitware-archive-keyring/copyright || rm /usr/share/keyrings/kitware-archive-keyring.gpg \
#  && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 1A127079A92F09ED \
#  && gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 1A127079A92F09ED \
#  && apt-add-repository -y 'deb https://apt.kitware.com/ubuntu/ xenial main' \
  && apt-get update \
  && apt-get install -y gcc-9 g++-9 \
  && echo "1" | update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9 \
  && echo "1" | update-alternatives --config gcc \
# && apt-get install -y cmake \
  && rm -rf /var/lib/apt/lists/*

RUN /bin/sh -c set -eux \
  && cd /tmp \
  && wget --no-check-certificate -nv "https://www.openssl.org/source/openssl-1.1.1o.tar.gz" -O- | tar xz \
  && cd openssl-* \
  && CC=gcc-9 \
  && CXX=g++-9 \
  && ./config --prefix=/usr/local \
  && make -j${NUMPROC} \
  && make install -j${NUMPROC} \
  && cd .. \
  && rm -rf * \
  && rm -rf /usr/local/share/doc/* \
  && rm -rf /usr/local/share/man/* \
  && ldconfig

RUN /bin/sh -c set -eux \
  && cd /tmp \
  && wget --no-check-certificate -nv "https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tar.xz" -O- | tar xJ \
  && mkdir build \
  && cd build \
  && ../Python-*/configure \
        --prefix=/usr/local \
        --enable-optimizations \
  && make -j${NUMPROC} \
  && make altinstall \
  && ln -sf /usr/local/bin/python3.10 /usr/local/bin/python3 \
  && cd .. \
  && rm -rf * \
  && python3 -m pip install --upgrade --no-cache-dir pip \
  && python3 -m pip install --no-cache-dir \
    mako \
    ninja \
    pyyaml \
    setuptools \
    sphinx \
  && rm -rf /usr/local/share/doc/* \
  && rm -rf /usr/local/share/man/* \
  && ldconfig

RUN /bin/sh -c set -eux \
  && apt-get update -y \
  && apt-get install -y \
    gcc-5-aarch64-linux-gnu \
    g++-5-aarch64-linux-gnu \
    pkgconf \
    gcc-aarch64-linux-gnu \
    g++-aarch64-linux-gnu \
    pkg-config-aarch64-linux-gnu \
    crossbuild-essential-arm64

RUN /bin/sh -c set -eux \
  && dpkg --add-architecture arm64 \
  && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C6BF758A33A3A276 6AF7F09730B3F0A4 42D5A192B819C5DA \
  && echo "###### Ubuntu port Repos" > /etc/apt/sources.list \
  && echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports xenial main restricted universe multiverse" >> etc/apt/sources.list \
  && echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports xenial-updates main restricted universe multiverse" >> etc/apt/sources.list \
  && echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports xenial-security main restricted universe multiverse" >> etc/apt/sources.list \
  && echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports xenial-backports main restricted universe multiverse" >> etc/apt/sources.list \
  && apt-get update \
  && apt-get install -y \
    alsa-utils:arm64 \
    libaio-dev:arm64 \
    libasound2-dev:arm64 \
    libass-dev:arm64 \
    libavformat-dev:arm64 \
    libavutil-dev:arm64 \
    libbz2-dev:arm64 \
    libcaca-dev:arm64 \
    libdrm-dev:arm64 \
    libffi-dev:arm64 \
    libflac-dev:arm64 \
    libfontconfig1:arm64 \
    libfreetype6-dev:arm64 \
    libfribidi-dev:arm64 \
    libgbm-dev:arm64 \
    libgdbm-dev:arm64 \
    libglm-dev:arm64 \
    libglu1-mesa-dev:arm64 \
    libjack-jackd2-dev:arm64 \
    libltdl-dev:arm64 \
    liblua5.3-dev:arm64 \
    liblzma-dev:arm64 \
    libmbedtls-dev:arm64 \
    libminiupnpc-dev:arm64 \
    libncurses5-dev:arm64 \
    libopenal-dev:arm64 \
    libosmesa6-dev:arm64 \
    libpcap0.8-dev:arm64 \
    libreadline-dev:arm64 \
    libroar-dev:arm64 \
    libsdl2-dev:arm64 \
    libsdl2-ttf-2.0-0:arm64 \
    libsixel-dev:arm64 \
    libslang2-dev:arm64 \
    libssl-dev:arm64 \
    libswscale-dev:arm64 \
    libsystemd-dev:arm64 \
    libtool-bin:arm64 \
    libtool:arm64 \
    libudev-dev:arm64 \
    libusb-1.0-0-dev:arm64 \
    libv4l-dev:arm64 \
    libvulkan-dev:arm64 \
    libwayland-dev:arm64 \
    libx11-dev:arm64 \
    libx11-xcb-dev:arm64 \
    libxcb-shm0-dev:arm64 \
    libxkbcommon-dev:arm64 \
    libxml2-dev:arm64 \
    mesa-common-dev:arm64 \
    qtbase5-dev:arm64 \
    uuid-dev:arm64 \
    x11proto-xext-dev:arm64 \
    zlib1g-dev:arm64 \
  && rm -rf /var/lib/apt/lists/* \
  && mkdir -p /opt/x-tools

ENV HOME=/developer
ENV QT_SELECT=qt5
ENV TARGET_CPU="cortex-a53"
# ENV TARGET_FLOAT="hard"
# ENV TARGET_FPU="neon-vfpv4"
# aarch64-trimui-linux-gnu
ENV HAVE_SDL=0
ENV HAVE_SDL2=1
ENV OPENGLES="mesa"
ENV ADDON_PROJECT="ARMv8"
ENV CC="/usr/bin/aarch64-linux-gnu-gcc"
ENV AR="/usr/bin/aarch64-linux-gnu-gcc-ar"
ENV CXX="/usr/bin/aarch64-linux-gnu-g++"
ENV PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig/
#ENV CXX11="/usr/bin/aarch64-linux-gnu-g++ -std=c++11"
#ENV CXX17="/opt/x-tools/aarch64-trimui-linux-gnu/bin/aarch64-trimui-linux-gnu-g++ -idirafter /usr/include -L/usr/lib/arm-linux-gnueabi/ -std=c++11"
#ENV CC17="/opt/x-tools/aarch64-trimui-linux-gnu/bin/aarch64-trimui-linux-gnu-gcc -idirafter /usr/include -L/usr/lib/arm-linux-gnueabi/ -std=c++11"
#ENV AR17=/opt/x-tools/aarch64-trimui-linux-gnu/bin/aarch64-trimui-linux-gnu-gcc-ar
#ENV AS17=/opt/x-tools/aarch64-trimui-linux-gnu/bin/aarch64-trimui-linux-gnu-gcc-as

USER root
#COPY --from=ctngbuild /opt/x-tools/aarch64-trimui-linux-gnu /opt/x-tools/aarch64-trimui-linux-gnu
WORKDIR /developer
VOLUME /developer

RUN echo "developer:developer" | chpasswd -m && adduser developer sudo

CMD /bin/bash
